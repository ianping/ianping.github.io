import{_ as t,c as s,b as e,o as p}from"./app-DsGHT65_.js";const n="/assets/20240312104608-B4YG5za-.png",o="/assets/20240312105445-9Kmb8FMM.png",r="/assets/20240312105523-BHnERHKk.png",c="/assets/20240312110642-Cgg0KhQy.png",i={};function m(l,a){return p(),s("div",null,a[0]||(a[0]=[e('<h2 id="acl模型" tabindex="-1"><a class="header-anchor" href="#acl模型"><span>ACL模型</span></a></h2><p>ACL(Access Control List，访问控制列表模型)。</p><p>用户表</p><p>资源表</p><p>权限表</p><p>ACL表</p><p><img src="'+n+'" alt=""></p><h2 id="rbac-基于角色的访问控制模型" tabindex="-1"><a class="header-anchor" href="#rbac-基于角色的访问控制模型"><span>RBAC：基于角色的访问控制模型</span></a></h2><p>RBAC(Role-Based Access Control，基于角色的访问控制)模型中，用户与角色&quot;多对多&quot;关联，角色与权限&quot;多对多&quot;关联。</p><p>用户表</p><p>角色表</p><p>权限表</p><p>用户-角色关系表</p><p><img src="'+o+'" alt=""></p><p>角色-权限关系表</p><p><img src="'+r+'" alt=""></p><h2 id="rbac-基于资源的访问控制模型" tabindex="-1"><a class="header-anchor" href="#rbac-基于资源的访问控制模型"><span>RBAC：基于资源的访问控制模型</span></a></h2><p>RBAC(Resource-Based Access Control，基于资源的访问控制)模型，是在基于角色的访问控制模型的基础上，引入资源表和资源-权限关系表，可以实现对某个具体资源（例如：API端点）进行细粒度的权限控制。</p><p>资源表</p><p>资源-权限关系表</p><p><img src="'+c+'" alt=""></p>',21)]))}const h=t(i,[["render",m],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/notes/database/mco5hsx6/","title":"权限管理系统设计","lang":"zh-CN","frontmatter":{"title":"权限管理系统设计","createTime":"2024/11/24 15:56:14","permalink":"/notes/database/mco5hsx6/"},"headers":[],"readingTime":{"minutes":0.71,"words":212},"git":{"updatedTime":1732441916000,"contributors":[{"name":"ianping","email":"13520322212@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/ianping?v=4","url":"https://github.com/ianping"}]},"filePathRelative":"notes/database/demos/权限管理系统设计.md","bulletin":false}');export{h as comp,g as data};
